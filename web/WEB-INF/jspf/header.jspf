<%-- any content can be specified here e.g.: --%>
<%@ page pageEncoding="UTF-8" %>

<div id="header">
    <nav class="navbar navbar-expand-lg bg-dark navbar-dark" v-if="session">
        <div class="container-fluid">
            <a class="navbar-brand" href="index.jsp">Quadro Avisos</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item" v-if="session.role=='ADMIN'">
                        <a class="nav-link" href="usuarios.jsp">Gerenciar usuarios</a>
                    </li>
                    <li class="nav-item" v-if="session.role=='ADMIN'">
                        <a class="nav-link" href="avisos.jsp">Gerenciar avisos</a>
                    </li>
                </ul>
                <div class="user d-flex align-items-center gap-1" style="cursor: pointer">
                    <span class="material-symbols-outlined text-white">
                        person
                    </span>
                    <span class="text-white">{{session.nome}}</span>
                    <button class="btn btn-danger d-flex" @click="logout()">
                        <span class="material-symbols-outlined">
                            logout
                        </span>
                    </button>
                </div>
            </div>
        </div>
    </nav>


</div>
<%@include file="cdnJs.jspf" %>
<script>
    const header = Vue.createApp({
        data() {
            return {
                session: null,
            }
        },
        methods: {
            async request(url = "", method, data) {
                try {
                    const response = await fetch(url, {
                        method: method,
                        headers: {"Content-Type": "application/json"},
                        body: JSON.stringify(data)
                    });
                    if (response.status == 200) {
                        return response.json();
                    } else {
                        this.error = response.statusText;
                    }
                } catch (e) {
                    this.error = e;
                    return null;
            }
            },
            async loadSession() {
                const data = await this.request("http://localhost:8080/TP-JavaEE/api/session", "GET");
                if (data) {
                    this.session = data;
                    console.log(this.session)
                }
            },

            async logout() {
                const data = await this.request("http://localhost:8080/TP-JavaEE/api/session", "DELETE");
                if (data) {
                    window.location.href = "login.jsp"
                }
            }
        },

        mounted() {
            this.loadSession();
        },
    });
    header.mount('#header');

</script>